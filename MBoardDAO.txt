package m2board;

import java.util.List;
import java.util.Map;
import java.util.Vector;

import board.BoardDTO;
import common.JDBConnPool;

public class MBoardDAO extends JDBConnPool {
	public MBoardDAO() {
		super();
	}

	// FILEBOARD TABLE 검색조건 고려 결과 전체 개수
	public int countAll(Map<String, Object> map) {
		int totalCount = 0;
		String query = "SELECT COUNT(*) FROM FILEBOARD";

		if (map.get("searchType") != null) {
			query +=	" WHERE " + map.get("searchType") 
					+ " LIKE '%" + map.get("searchStr") + "%'";
		}
		try {
			stmt = con.createStatement();
			rs = stmt.executeQuery(query);
			rs.next();        //한 행의 결과만 반환하기때문
			totalCount=rs.getInt(1); // 결과 집합의 첫 번째 열(column)의 값을 가져옴
		} catch (Exception e) {
			System.out.println("검색 게시물 카운트 중 에러");
			e.printStackTrace();
		}
		return totalCount;
	}

	
	public List<MBoardDTO> getListPage(Map<String, Object> map) {
		List<MBoardDTO> bl = new Vector<>();
		String query = "SELECT * FROM"
					+ "("
					+ "    SELECT ROWNUM AS PNUM, S.* FROM"
					+ "    ("
					+ "        SELECT * FROM FILEBOARD";
		if (map.get("searchType") != null) {
			query +=	" WHERE " + map.get("searchType") 
				+ " LIKE '%" + map.get("searchStr") + "%'";
		}
			query+= " ORDER BY IDX DESC"
				+ "    ) S"
				+ ") WHERE PNUM BETWEEN ? AND ?";
		try {
			psmt=con.prepareStatement(query);
			psmt.setString(1, map.get("start").toString());
			psmt.setString(2, map.get("end").toString());
			rs=psmt.executeQuery();
			while(rs.next()) {
				MBoardDTO dto = new MBoardDTO();
				dto.setIdx(rs.getString("idx"));
				dto.setName(rs.getString("name"));
				dto.setTitle(rs.getString("title"));
				dto.setContent(rs.getString("content"));
				dto.setPostdate(rs.getDate("postdate"));
				dto.setOfile(rs.getString("ofile"));
				dto.setNfile(rs.getString("nfile"));				
				dto.setDowncount(rs.getInt("downcount"));
				dto.setVisitcount(rs.getInt("visitcount"));
				dto.setPass(rs.getString("pass"));
				
				bl.add(dto);
			}
		}catch (Exception e) {
			System.out.println("게시물 목록 읽는 중 에러");
			e.printStackTrace();
		}
		return bl;
	}

}
