HTML을 배우기 전 IT 기본상식 복습(Lv1때 알아봤던 내용들)

Client vs Server?
클라이언트와 서버는 데이터를 요청하는 컴퓨터 측이 클라이언트고, 요청 받은 것을 응답하는 컴퓨터를 서버라고 한다.

HTTP?(축약 풀어쓰기: HyperTextTransferProtocol)
웹페이지를 규정하는 규약 같은 것이라 이해하면 된다.
HTML?
HyperTextMarkupLanguage
웹페이지 문서를 구성하는 언어
JSP?
Java Server Page
 HTML 코드에 Java 코드를 넣어 동적인 웹 페이지를 생성하는 웹 어플리케이션 도구
HTML와 JSP 차이점?
둘의 가장 큰 차이점은 정적인 페이지를 구성시에 html로 구성하고 동적인 페이지를 구성시에 jsp로 구성을 한다.

GET? 
POST?
GET과 POST 차이점?

요청 방식은 GET,POST 방식이 있는데 둘의 차이점은 GET같은 경우에는 클라이언트가 서버에 데이터를 넘겨줄 때 URL에 데이터가 보여 보안에 취약하다.
하지만 POST 방식은 URL에 안보이고 보안에 강하다는 것이다.
다만 , GET방식은 검색기능을 구현 시에 사용하는 방식이고, POST 방식은 데이터를 생성/갱신 할때 사용하는 방식이다. 

Servlet?
서블릿이라 함은 웹페이지 내에 있는 작은 자바 프로그램을 말하는 것이다.

request?
response?
요청/응답

front-end?
back-end?
full-stack-deveoper?
프론트엔드라는 것은 클라이언트에서 웹브라우저로 웹페이지를 탐색시에 보이는 영역들을 의미하고
백엔드라는 것은 클라이언트에게 보이지 않는 영역을 의미한다.(ex DB,비동기 통신 등등)
이 두 영역을 통괄하는 개발자를 풀스택개발자라고 한다.

buffer?
버퍼 같은 경우는 자주 사용하는 데이터를 저장하는 공간이라고 알면된다.
cache?
캐시도 버퍼와 마찬가지이다. 자주사용하는 데이터를 저장하는 공간이다.단지 이 캐시를 만든 의도는 ROM중에는HDD와 SSD가 있는데 이 둘의 성능차이는 데이터를 탐색 시에
인덱스가 HDD는 앞에서 부터 돌고 SSD는 인덱스가 임의로 돌아서 HDD보다 데이터 탐색속도가 더 빠르다. 결국 장치들의 성능차이를 위해 데이터를 임시 저장하는 공간이라고 보면 된다. 
register?
레지스터는 자주 사용하는 것을 저장하는 공간이지만, 저장하는 것이 데이터가 아닌 연산을 저장하는 공간이다.
hosting?
클라이언트가 일부 메모리 영역을 임대하는 것을 의미한다.
Built-in Object?
내부객체라는 것은 웹페이지 안에서 객체를 생성하지 않아도 미리 생성되는 객체를 이야기 한다.
실제 웹페이지에는 메소드만 사용해도 된다.
Query String?
쿼리스트링이라 함은 데이터를 교환시에 URL에 데이터 일부를 넣어 전송하는 것을 의미한다.
Web Server?
WAS?(축약 풀어쓰기: Web Application Server)
Web Server와 WAS의 차이점?
둘 다 서버이긴한데, 차이는 웹 서버는 정적인 페이지를 클라이언트에게 보여줄때 사용하고, 동적인 페이지를 보여줄 때는 WAS를 사용한다.
MIME type?**
클라이언트에게 전송된 문서의 다양성을 알려주기 위한 메커니즘
Absolute Path?
절대 경로를 의미하고, 실제 데이터를 저장하는 경로를 의미한다.
Relative Path?
상대 경로를 의미하고, 해당 데이터가 있는 디렉토리 기준으로 표기한 경로를 의미한다. 
두 Path의 차이점?
두 경로의 차이점이라 함은 데이터 손실 가능성이 둘 다 달라서 절대경로는 경로가 정확하기에 데이터 손실 가능성이 아예없고, 상대경로는 데이터 손실 가능성이 있다.
Compiler?
Interpreter?
컴파일러나 인터프리터는 둘 다 번역기이며 우리가 사용하는 문자모음을 기계어로 바꿔주는 역할을 한다.
Container?
어떤 상황에서나 프로그램이 실행될 수 있도록 하는 소프트웨어 컴파일러도 여기에 포함된다.
Browser?
브라우저라 함은 클라이언트가 웹페이지를 탐색시에 사용하는 소프트웨어이다.
Uni-code Encoding?
유니코드라는 고정된 문자길이의 문자셋으로 변환하는 작업
UTF-8?
UTF-8은  ISO 10646에서 정의한 표준 문자셋이다.
EUC-KR?
EUC-KR은 영어를 제외한 문자셋으로 알면 된다.
URL(Uniform Resource Locator)?
URL은 네트워크 상에 위치한 주소를 의미한다.
네트워크 상식

+)
URI(Uniform Resource Identifier) 자원 자체를 식별한 주소

URN(Uniform Resource Name) 자원에 이름을 부여하는 것


OSI 7계층 구성?
물리계층 >> 데이터링크 계층 >>네트워크 계층 >>전송계층 >>세션계층 >>응용계층 >> 표현 계층
동작방식? 컴퓨터와 컴퓨터가 데이터를 교환할 때, 과정마다 나눠서 나타낸 것이라고 이해하면 된다.

Header? 헤더라는 것은 각 계층으로 전달하기 위해 전송 경로를 담은 데이터이다.

IPv4?(축약 풀어쓰기: Internet Protocol Version 4) **
ip를 할당하는 영역(영역이 아니라 프로토콜 즉, 규약이다.)? 32비트로 구성 

IPv6?(축약 풀어쓰기: Internet Protocol Version 6)
위와 기능은 동일한데 할당하는 방법이 다르다. 저장공간은 128비트로 구성 

OS 상식

OS란?(축약 풀어쓰기: Operating System)
통상 운영체제라고 한다. 사용자가 컴퓨터를 보다 편하게 다루기 위한 소프트웨어
예전 컴퓨터는 cmd로만 파일 시스템을 관리했는데 지금은 운영체제의 GUI를 통해 파일시스템을 관리하는 것이다.
HDD?(축약 풀어쓰기: HardDiskDrive)

동작방식:ROM(보조 기억장치의 일종)이고 디스크로 인덱스로 데이터를 탐색한다.하지만 순차적으로 하여 탐색속도가 느리다.

SSD?(축약 풀어쓰기: SolidStateDrive) 

동작방식: HDD와 기능자체는 동일하나 그 차이는 인덱스를 임의로 돌려서 데이터를 탐색한다.

CPU? 중앙처리장치를 의미하고, 컴퓨터를 사람에 비유를 하면 뇌를 의미한다.

Core? 쓰레드를 관리하는 CPU의 일부분

Program? 프로그램은 그냥 기본적인 실행파일(exe)로 알면 된다.

Transaction? 트랜잭션은 DB용어로 작업을 쪼갤 수 없는 단위로 나눈 것을 트랜잭션이라고 한다.

Process? 프로세스는 프로그램을 다루는 주체로 즉 , 작업을 하는 주체로 보면 된다.

Thread? 쓰레드는 프로세스에 속하며 작업의 흐름으로 보면 된다. 또 다른 표현으로는 작업의 주체이다.

기본 태그들(의미정도는 암기해두자! 찾아보는 시간 줄이기 단련) 복습
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>가 의미하는 바는? jsp에서 가장먼저 나오는 태그이며 지시어이다.
의미는 스크립트 타입을 자바로 하고(디폴트 타입 자바라 없애도 무방), 해당 문서는 html이며, 문자셋은 utf8로 이루어져있으며
인코딩또한 utf-8로 한다는 것을 알리는 태그 (약간 패킷의 헤더 역할로 보면 된다.)
<!DOCTYPE html>? html을 정의 하는 태그
<meta> 메타 데이터를 정의하는 태그(메타 데이터란 데이터를 설명하는 데이터)

<html> html의 시작과 끝을 나타내는 태그

<head> 문서의 머리말을 나타내는 태그

<body>문서의 본문을 나타내는 태그

태그의 상속관계는 어떻게 되는가? 태그는 ex) <a><b></b><a/> 의 형태라면 a는 b의 부모 태그로 보면 된다. 반대로 b는 a의 자식태그로 보면된다.

<h1> body태그의 머리를 나타내는 태그 숫자가 높아질수록 글자 크기가 작아진다.

<img>태그 이미지를 html문서에 이미지파일(jpg,gif,png)를 표기할때 쓰는 태그

src 속성값 해당 이미지의 url을 나타내는 속성

alt 속성값 이미지 파일이 존재하지 않을 시 문자열을 출력해주는 속성값(예외처리)

<p>태그 body태그의 문단을 나누는 태그

<br>태그 줄바꿈효과를 주는 태그

<pre>태그 띄어쓰기가 2칸 이루어지는 태그

<hr>태그 줄바꿈과 동시에 줄을 그어 두 영역을 나누는 태그

<b>태그 태그 영역 내에 있는 글을 굵은 글씨체로 바꿔주는 태그

<strong>태그 b태그와 기능은 동일하나 웹페이지 상에서 강조하는 역할을 하는 태그

<i>태그 태그 영역 내에 있는 글을 이탤릭체로 바꿔주는 기능을 가진 태그

<em>태그 기능은 i태그와 동일하나 strong 태그와 마찬가지로 웹페이지상에서 내용을 강조하는 태그

<mark>태그 하이라이팅 효과를 주는 태그(형광펜으로 칠한 듯한 효과)

<del>태그 태그 영역 내에 있는 글을 빗금을 긋는 효과를 주는 태그

<ins>태그 태그 영역 내에 있는 글을 밑줄을 그어주는 기능을 하는 태그

<sub>태그 밑 첨자 효과를 주는 태그

<sup>태그 윗 첨자 효과를 주는 태그

<blackquote>태그 p태그 내에서 또 문단을 나누는 기능을 하는 태그

<abbr>태그 웹페이지 상 줄임말을 정의하는 태그

<address>태그 주소를 입력하는 태그인데 기본 태그와 차이가 있다면 앞에 약간의 공백을 넣어주는 기능이 있는 태그

<!-- -->태그 주석

&lt html 버전의 이스케이프 문자라고 보면 된다(< 표기 )

&gt html 버전의 이스케이프 문자라고 보면 된다(> 표기 )

&nbsp 공백 이스케이프 문자

<a> 하이퍼링크를 html 문서에 참조할 때 사용하는 태그 이 태그를 포함 시키면 해당 영역 내에서 입력한 url로 이동하게 된다. 
href >>  url을 입력하는 속성
target>> _self,_blank로 나뉘는데 이 것은 현재 창, 새창으로 띄울 때 사용하는 속성 값 