JavaScript


언어 관련 기술

Ajax
비동기 통신 기술

jQuery
웹페이지의 요소를 보다 쉽게 찾고 조작 가능한 js 라이브러리

Node.js
js를 브라우저 이외의 환경에서 동작 시킬 수 있는 기술



브라우저 엔진 동작 원리

렌더링 엔진  // 자바스크립트 엔진  << 브라우저 내부에 존재하는 엔진들
Html문서,cssFile      JavaScript


렌더링 트리


Hoisting
var 선언문이나 function 선언문 등 모
든 선언문이 해당 Scope의 선두로 옮
겨진 것처럼 동작하는 특성



Scope
변수나 함수의 유효범위

이전에는 함수에 선언하면 전역변수로 사용가능했으나
현재는 Block Level Scope로 통일하였다.


원시형(Primitive Type)
boolean
String 
undefined
null
number
객체형(Object Type)

자바와 유사하게 원시형을 제외한 모든 자료형은 객체형이다.

재선언 재할당
무시	o 	var
x	o 	let	
x	x 	const

명시적 타입 변환(자바의 WrapperClass개념, boxing unboxing)
ex)
Number.parseInt(형변환할 변수) == parseInt(형변환할 변수)

연산자
대부분 자바와 비슷하지만 약간 다른 것이 나누기 연산자는
소수점까지도 표기해줌

2/3 >> 0.666666...

2**3 == Math.pow(2,3)


비교연산자
자바(==) : 값이 같다면 true 다르다면 false 리턴

자바스크립트(===): 값과 자료형이 같으면 true,
 값과 자료형 둘 중 하나라도 만족하지 않으면 false



단축 평가
true || anything >> true
true&&anything >> anything


비트 연산
^(XOR 연산)
대응 비트가 서로 다르면 1 같으면 0으로 반환



typeof 변수
변수의 자료형 문자열로 리턴
ex)
var a=1;
console.log(typeof a);
//콘솔창에 number로 찍힘

변수1 instanceof 자료형1
변수1이 자료형1인가 boolean값으로 리턴


window객체 메소드
window.alert('문자열') 문자열을 창의 안내문으로 추가시켜 팝업창으로 띄움
undefined 값 리턴(null 아님)
window.prompt('문자열') 문자열 입력창이 뜨며 해당 메소드는 입력 받은 문자열을 리턴해줌
window.confirm('문자열') 예/아니오 고르느 팝업창이 뜨면서 고른 버튼에 따라 true/false가 리턴



label 다중 반복문 탈출시에 한꺼번에 탈출 용이

사용법

ex) for문 예시
loop1:
for(var i = 0;i<3;i++){
	loop2:
	for(var j=0;j<3;j++){
		console.log(i,j);
		if((i===1)&&(i===1)) break loop1;
	}
}

콘솔창

0 0
0 1
0 2
1 0
1 1

향상 for문

for(변수 in 자료구조)
 >> 변수에 자료구조의 원소 인덱스를 초기화하면서 실행되는 원리

for(변수 of 자료구조)
>> 변수에 자료구조 원소 값 자체로 초기화하면서 실행되는 원리


배열

배열(객체형) 생성

(자료형) (변수명) = [원소1,원소2...];
		Array(원소1,원소2...); , Array(number);
		//오버로딩 단일 매개변수면 해당 숫자만큼 배열의 크기를 잡는다 원소는 undefined
		new Array(원소1,원소2...);

자바의 배열과는 개념이 다르다
기존 자바에서는 같은 자료형만 담을 수 있었지만
자바스크립트에서는 서로 다른 자료형 또한 담을 수 있다.
배열의 동작을 흉내낸 특수 객체!
(각 원소별로 자료형 크기가 다를 수 있다.)

프로퍼티

length  배열의 크기를 값으로 가지고 있음



배열 관련 메소드

Array.of(원소1,원소2.....)
Array(원소1,원소2....) //Array()생성자 메소드 대체 메소드


Array.from(변수)
유사 배열 객체나 iterable한 객체를 배열로 만들어주는 메소드
Array.from({length:10}) === Array(10)



from(ⓐ,함수) //오버로딩

ⓐ
Iterable 객체
객체형에 고차원 함수를 사용가능하게 하려면 Iterable하게 만들어야 한다

**유사배열 객체
 length 프로퍼티와 인덱스 된 요소를 가지고 있는 객체
{length: 배열길이 , 인덱스1: 값1, 인덱스2: 값2 ....}
length: 배열길이 프로퍼티는 필수지만 뒤의 원소를 나타내는 프로퍼티는 필수가 아니다.

배열 객체명.isArray()
배열 객체인지 아닌지를 boolean값으로 리턴

배열 객체명.indexOf(값)
값과 일치하는 특정 원소의 위치의 인덱스를 리턴

배열 객체명.includes(값)
값과 일치하는 특정 원소의 포함여부를 boolean으로 리턴


splice 함수(원본 배열 건드는 함수)
splice(start, deleteCount, newItem, newItem, newItem, ...)
start에 적용지점을 기입
deleteCount에 지울 개수 기입(0 기입 가능)
newItem들
해당 배열 위치에서부터 원소 기입

slice(원본 배열 건드리지 않는 함수)
slice(ⓐ)
배열의 원소를 처음부터  ⓐ만큼 자른 배열을 리턴하는 함수 
slice(ⓐ,ⓑ)
배열의 원소를 ⓐ부터 ⓑ만큼 자른 배열을 리턴하는 함수

push(값)
스택의 push 메소드와 기능 동일
배열 크기 리턴
pop()
스택의 pop 기능과 동일
배열의 가장 끝 요소 반환 후 제거
shift
배열의 가장 앞 원소 제거후 해당 원소 리턴
unshift ***
배열의 가장 앞에 원소 추가 후 배열 크기 리턴


document 객체

프로퍼티
title,body,head: 문서의 title,body,head 태그
URL: 문서 URL


location




window
alert 팝업창
prompt
confirm

		







 




















용어 정리

Browser
웹 브라우저 혹은 브라우저 는 웹에서 페이지를 검색하고 
표시하며 사용자가 하이퍼링크를 통해 추가 페이지에 접근할 수 있도록 하는 프로그램
WebKit
웹 브라우저를 만드는 데 기반을 제공하는 오픈 소스 응용 프로그램 프레임워크
Cross Browsing
 웹 페이지 제작 시에 모든 브라우저에서 깨지지 않고 의도한 대로 올바르게 나오게 하는 작업
Cross Platform
컴퓨터 프로그램, 운영 체제, 컴퓨터 언어, 프로그래밍 언어, 컴퓨터 소프트웨어 등이
 여러 종류의 컴퓨터 플랫폼에서 동작할 수 있다는 것을 뜻하는 용어이다
Method chaining
메소드를 고리마냥 줄줄이 엵어서 메소드를 계속해서 사용할 수 있게끔 하는 방법
ex)Stream 연산의 PipeLine 같음
GOF중 Builder 패턴
Rendering
컴퓨터 프로그램을 사용하여 모델 또는 이들을 모아놓은 장면인 
씬 파일로부터 영상을 만들어내는 과정
Rendering Engine
HTML, XML과 서식정보인 CSS, XML 등을 읽어들여 
사람이 읽을 수 있는 문서로 표시하는, 웹 브라우저의 핵심기능을 담당하는 소프트웨어
JavaScript Engine
자바스크립트 코드를 실행하는 프로그램 또는 인터프리터
Memory Heap
변수 선언, 함수 저장, 호출 등의 작업이 발생하는 공간
Call Stack
코드를 읽어내려가면서 수행할 작업들을 밑에서부터 하나씩 쌓고, 
메모리 힙에서 작업 수행에 필요한 것들을 찾아서 작업을 수행하는 공간
Garbage Collection(통칭 GC)
메모리 관리 기법 중 하나로 프로그램이 동적으로 할당했던
메모리 영역 중에서 필요없게 된 영역을 해제하는 기능
Parameter(인자)
함수 정의 시 필요한 변수 이름
Argument(인수)
함수를 호출 시 실제 전달하는 값
ex)
function a(var e){
	return e;
}
a(10);
여기서 e는 파라미터가 되는 것이고 10이 아규먼트가 되는 것이다.
동치(同値): 두 문장이 논리적으로 같다는 것을 의미
Iteration protocol 
데이터 컬렉션을 순회하기 위한 프로토콜(미리 약속된 규칙)